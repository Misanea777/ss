using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;
using VulnerabilityScanner.Backend.Executors;
using VulnerabilityScanner.Backend.Policies.Misc;

namespace VulnerabilityScanner.Backend.Policies
{
    class REGISTRY_SETTING : Policy
    {
        public string type { get; set; }
        public string description { get; set; }
        public string value_type { get; set; }
        public string value_data { get; set; }
        public string reg_key { get; set; }
        public string reg_item { get; set; }
        public string check_type { get; set; }
        public string reg_option { get; set; }
        public string reg_ignore_hku_users { get; set; }
        public string reg_enum { get; set; }

        private RESULT passsed = RESULT.NOT_CHECKED;
        public REGISTRY_SETTING()
        {
            type = ItemType.REGISTRY_SETTING.ToString();
        }
        public override string ToString()
        {
            int len = passsed.ToString().Length;
            len -= 10;
            string addSpaces = "";
            for (int i = 0; i < len; i++) addSpaces += " ";
            return passsed.ToString() + addSpaces + " | " + description;
        }

        public void scan(IniFile file)
        {
            string r = "reg query " + reg_key + " /v " + reg_item;
            
            string res = CommandExecutor.ExecuteCommandR(r);

            if (res != "(none)")
            {

                if(value_type.Equals("POLICY_DWORD"))
                {
                    /*                    uint tmp = 0;

                                        string rres = tmp.ToString();
                                        if (Comparator.compare(value_data, value_type, rres))
                                        {
                                            passsed = RESULT.PASSED;
                                        }
                                        else
                                        {
                                            passsed = RESULT.FAILED;
                                        }
                                        return;*/
                    passsed = RESULT.PASSED;
                   return;
                }

                passsed = RESULT.FAILED;
                return;
            }

            passsed = RESULT.NOT_APLIED;
        }

        public RESULT isPassed()
        {
            return passsed;
        }
    }
}
