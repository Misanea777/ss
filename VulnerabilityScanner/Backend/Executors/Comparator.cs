using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace VulnerabilityScanner.Backend.Executors
{
    class Comparator
    {
        struct numberRange
        {
            uint lNumber;
            uint hNumber;
        }

        public static bool compare(string dataValue, string dataType, string valueToCompare)
        {
            uint parsedValue;
            uint.TryParse(valueToCompare, out parsedValue);

            if (dataType.Equals("POLICY_DWORD")
                || dataType.Equals("TIME_DAY")
                || dataType.Equals("TIME_MINUTE")
                || dataType.Equals("TIME_HOUR"))
            {
                if (uint.TryParse(dataValue, out _)) return dataValue.Equals(valueToCompare);
                if(dataValue.StartsWith("[") && dataValue.EndsWith("]"))
                {
                    bool firstCheck = false;
                    bool secondCheck = false;
                    uint tmp1;

                    dataValue = dataValue.Substring(1, dataValue.Length - 2);
                    string[] spliter = { ".." };
                    var pices = dataValue.Split(spliter, StringSplitOptions.None);
                    if (uint.TryParse(pices[0], out tmp1))
                    {
                        firstCheck = tmp1 <= parsedValue;
                    }
                    else if(parsedValue != 0) firstCheck = true;
                    else firstCheck = false;


                    if (uint.TryParse(pices[1], out tmp1))
                    {
  
                        secondCheck = tmp1 >= parsedValue;
                    }
                    else secondCheck = true;

                    if (firstCheck && secondCheck) return true;
                    else return false;
                }
            }

            if(dataType.Equals("POLICY_SET"))
            {
                int enabled = -1;
                if (dataValue.Equals("Enabled")) enabled = 1;
                if (dataValue.Equals("Disabled")) enabled = 0;
                return enabled == parsedValue;  
            }

            Console.WriteLine("Should not be here");
            return false;
        }

        
    }
}
